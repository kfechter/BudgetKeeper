@page
@using System.Globalization
@using BudgetKeeper.Domain.Entities;

@model IndexModel
@{
    ViewData["Title"] = "Debts";
    var culture = CultureInfo.CreateSpecificCulture("en-US");
    decimal paidOffValue = 0;
}

<h1 class="text-center">Current Debts</h1>
<button class="btn btn-danger btn-float" type="button" onclick="addItem()">Add New Debt</button>
@Html.AntiForgeryToken()

<div id="partialModal" class="modal hide fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Debt</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary close" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-secondary close" data-bs-dismiss="modal" onclick="saveItem()">Save</button>
            </div>
        </div>
    </div>
</div>

<div id="payoffModal" class="modal hide fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Payoff Debt?</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary close" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger close" data-bs-dismiss="modal" onclick="payoffSaveItem()">Payoff</button>
            </div>
        </div>
    </div>
</div>

<div id="createModal" class="modal hide fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Debt</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary close" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-secondary close" data-bs-dismiss="modal" onclick="createDebt()">Create</button>
            </div>
        </div>
    </div>
</div>


@if(Model.CurrentDebts.Count > 0) {
<table class="table" id="currentDebtsTable">
    <tr>
        <th>Debt Name</th>
        <th>Debt Amount</th>
        <th>Monthly Payment</th>
        <th>Payments Left</th>
        <th>Debt Type</th>
        <th>Debt Status</th>
        <th></th>
    </tr>
    @foreach (var currentDebt in Model.CurrentDebts)
        {
    <tr>
        <td>@currentDebt.DebtName</td>
        <td>@currentDebt.DebtAmount!.Value.ToString("C2", culture)</td>
        <td>@currentDebt.MonthlyPayment!.Value.ToString("C2", culture)</td>
        <td>@currentDebt.PaymentsLeft!.Value.ToString("N0", culture)</td>
        <td>@currentDebt.BudgetType</td>
        @if (currentDebt.IsOpen == true)
        {
            <td>Open</td>
        }
        else
        {
            <td>Closed</td>
        }
        <td>
            <a class="details" onclick="editItem(@currentDebt.Id)">Edit Debt</a> |
            <a class="details" onclick="payoffItem(@currentDebt.Id)">Payoff Debt</a> |
            <a class="details" onclick="makePayment(@currentDebt.Id)">Make Payment</a>
        </td>
    </tr>
        }
</table>
}
else {
<h3 class="text-center">No Current Debts</h3>
}

<div class="text-end"><p>Total Unpaid Debt: @Model.TotalUnpaidDebt.ToString("C2", culture)</p></div>
<div class="text-end"><p>Total Monthly Spend: @Model.TotalMonthlyPayment.ToString("C2", culture)</p></div>


<br>
<br>

<h1 class="text-center">Past Debts</h1>

@if (Model.PastDebts.Count > 0) {
<table class="table">
    <tr>
        <th>Debt Name</th>
        <th>Debt Amount</th>
        <th>Monthly Payment</th>
        <th>Remaining Payments</th>
        <th>Debt Type</th>
        <th>Debt Status</th>
        <th></th>
    </tr>
    @foreach(var pastDebt in Model.PastDebts) {
    <tr>
        <td>@pastDebt.DebtName</td>
        <td>@pastDebt.DebtAmount!.Value.ToString("C2", culture)</td>
        <td>@paidOffValue.ToString("C2", culture)</td>
        <td>@pastDebt.PaymentsLeft!.Value.ToString("N0", culture)</td>
        <td>@pastDebt.BudgetType</td>
        @if(pastDebt.IsOpen == true)
        {
            <td>Open</td>
        }
        else
        {
            <td>Closed</td>
        }
        @if(pastDebt.BudgetType == BudgetType.CreditCard && pastDebt.IsOpen) 
        {
            <td><a class="details" onclick="closeCard(@pastDebt.Id)">Close Card</a></td>
        }
    </tr>
        }
</table>
}
else {
<h3 class="text-center">No Past Debts</h3>
}

<script type="text/javascript">
    function payoffSaveItem() {
        var id = $("#debtIdField").val();
        var closeCard = $("#CloseCard").is(":checked");

        $.ajax({
            type: "POST",
            url: "/Index?handler=PayoffSaveItem",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: { "id": id, "closeOnPayoff": closeCard },
            success: function (response) {
                window.location.reload();
            }
        });
    }

    function closeCard(id) {
        $.ajax({
            type: "POST",
            url: "/Index?handler=CloseCard",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: { "id": id },
            success: function (response) {
                window.location.reload();
            }
        });
    }

    function saveItem() {
        var id = $("#debtIdField").val();
        var debtName = $("#DebtName").val();
        var debtAmount = $("#DebtAmount").val();
        var monthlyPayment = $("#MonthlyPayment").val();
        var budgetType = $("#BudgetType").val();
        var isOpen = $("#IsOpen").is(":checked");

        $.ajax({
            type: "POST",
            url: "/Index?handler=SaveItem",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: { "id": id, "debtName": debtName, "debtAmount": debtAmount, "monthlyPayment": monthlyPayment, "budgetType": budgetType, "isOpen" : isOpen },
            success: function (response) {
                window.location.reload();
            }
        });
    }

    function payoffItem(id) {
        $.ajax({
            type: "POST",
            url: "/Index?handler=PayoffItem",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: { "id": id },
            success: function (response) {
                $("#payoffModal").find(".modal-body").html(response);
                $("#payoffModal").modal('show');
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }

    function makePayment(id) {
        $.ajax({
            type: "POST",
            url: "/Index?handler=MakePayment",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: { "id": id },
            success: function (response) {
                window.location.reload();
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }

    function editItem(id) {
        $.ajax({
            type: "POST",
            url: "/Index?handler=EditItem",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: { "id": id },
            success: function (response) {
                $("#partialModal").find(".modal-body").html(response);
                $("#partialModal").modal('show');
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }

    function addItem() {
        $.ajax({
            type: "POST",
            url: "/Index?handler=AddItem",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            success: function (response) {
                $("#createModal").find(".modal-body").html(response);
                $("#createModal").modal('show');
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }

    function createDebt() {
        var debtName = $("#DebtName").val();
        var debtAmount = $("#DebtAmount").val();
        var monthlyPayment = $("#MonthlyPayment").val();
        var budgetType = $("#BudgetType").val();
        var isOpen = $("#IsOpen").is(":checked");

        $.ajax({
            type: "POST",
            url: "/Index?handler=CreateDebtSave",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: { "debtName": debtName, "debtAmount": debtAmount, "monthlyPayment": monthlyPayment, "budgetType": budgetType, "isOpen": isOpen },
            success: function (response) {
                window.location.reload();
            }
        });
    }
</script>